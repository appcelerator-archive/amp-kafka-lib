{
  "version": 3,
  "sources": [
    "../src/KafkaConsumer.js"
  ],
  "names": [],
  "mappings": ";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEe,MAAM,aAAN,yBAAkC;;AAE/C,cAAY,QAAZ,EAAsB,OAAtB,EAA+B,aAA/B,EAA8C;AAC5C,UAAM,OAAN;;AAEA,SAAK,QAAL,GAAgB,iCACd,KAAK,MADS,EAEd,QAFc,EAGd;AACE,kBAAY,IADd;AAEE,eAAS;AAFX,KAHc,CAAhB;;;;AAWA,SAAK,cAAL,GAAsB,CAAC,MAAD,EAAS,UAAT,KAAwB;AAC5C,aAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAqB;AACtC,aAAK,QAAL,CAAc,SAAd,CAAwB,MAAxB,EAAgC,CAAC,GAAD,EAAM,KAAN,KAAgB;AAC9C,cAAI,GAAJ,EAAS,OAAO,OAAO,GAAP,CAAP;AACT,iBAAO,QAAQ,KAAR,CAAP;AACD,SAHD,EAGG,UAHH;AAID,OALM,CAAP;AAMD,KAPD;AAQA,SAAK,QAAL,CAAc,iBAAd,GAAkC,yBAAU,KAAK,QAAL,CAAc,YAAxB,CAAlC;AACA,SAAK,QAAL,CAAc,WAAd,GAA4B,yBAAU,KAAK,QAAL,CAAc,MAAxB,CAA5B;AACA,SAAK,QAAL,CAAc,UAAd,GAA2B,yBAAU,KAAK,QAAL,CAAc,KAAxB,CAA3B;;;AAGA,QAAI,SAAS,CAAC,SAAD,EAAY,OAAZ,EAAqB,kBAArB,CAAb;AACA,WAAO,OAAP,CAAe,SAAS;AACtB,WAAK,QAAL,CAAc,EAAd,CAAiB,KAAjB,EAAwB,CAAC,GAAG,IAAJ,KAAa;AACnC,aAAK,IAAL,CAAU,KAAV,EAAiB,GAAG,IAApB;AACD,OAFD;AAGD,KAJD;AAKD;;AAEK,WAAN,CAAgB,MAAhB,EAAwB;AAAA;;AAAA;AACtB,aAAO,MAAM,MAAK,iBAAL,CAAuB,MAAvB,EAA+B,IAA/B,CAAb;AADsB;AAEvB;;AAEK,OAAN,CAAY,KAAZ,EAAmB;AAAA;;AAAA;AACjB,YAAM,OAAK,QAAL,CAAc,UAAd,CAAyB,KAAzB,CAAN;AADiB;AAElB;;AAEK,QAAN,GAAe;AAAA;;AAAA;AACb,YAAM,OAAK,QAAL,CAAc,WAAd,EAAN;AADa;AAEd;;AAED,UAAQ;AACN,SAAK,QAAL,CAAc,KAAd;AACD;;;;;AAKK,cAAN,CAAmB,MAAnB,EAA2B;AAAA;;AAAA;AACzB,aAAO,MAAM,OAAK,QAAL,CAAc,iBAAd,CAAgC,MAAhC,CAAb;AADyB;AAE1B;;AAED,WAAS;AACP,SAAK,QAAL,CAAc,MAAd;AACD;;;;;AAKD,YAAU,KAAV,EAAiB,SAAjB,EAA4B,MAA5B,EAAoC;AAClC,SAAK,QAAL,CAAc,SAAd,CAAwB,KAAxB,EAA+B,SAA/B,EAA0C,MAA1C;AACD;;AAED,gBAAc;AACZ,WAAO,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAqB;AACtC,WAAK,QAAL,CAAc,EAAd,CAAiB,SAAjB,EAA4B,OAA5B;AACA,WAAK,QAAL,CAAc,EAAd,CAAiB,OAAjB,EAA0B,MAA1B;AACA,WAAK,QAAL,CAAc,EAAd,CAAiB,kBAAjB,EAAqC,MAArC;AACD,KAJM,CAAP;AAKD;AA7E8C;kBAA5B,a",
  "file": "KafkaConsumer.js",
  "sourcesContent": [
    "import { HighLevelConsumer } from 'kafka-node';\nimport Kafka from './Kafka';\nimport { promisify } from 'bluebird';\n\nexport default class KafkaConsumer extends Kafka {\n\n  constructor(payloads, options, consumerGroup) {\n    super(options)\n\n    this.consumer = new HighLevelConsumer(\n      this.client,\n      payloads,\n      {\n        autoCommit: true,\n        groupId: consumerGroup\n      }\n    )\n\n    // promisify consumer functions\n    // manually promisify addTopics because callback is in the middle of the params list\n    this.addTopicsAsync = (topics, fromOffset) => {\n      return new Promise((resolve, reject) => {\n        this.consumer.addTopics(topics, (err, added) => {\n          if (err) return reject(err)\n          return resolve(added)\n        }, fromOffset)\n      })\n    }\n    this.consumer.removeTopicsAsync = promisify(this.consumer.removeTopics)\n    this.consumer.commitAsync = promisify(this.consumer.commit)\n    this.consumer.closeAsync = promisify(this.consumer.close)\n\n    // delegate consumer events\n    let events = ['message', 'error', 'offsetOutOfRange']\n    events.forEach(event => {\n      this.consumer.on(event, (...args) => {\n        this.emit(event, ...args)\n      })\n    })\n  }\n\n  async addTopics(topics) {\n    return await this.createTopicsAsync(topics, true)\n  }\n\n  async close(force) {\n    await this.consumer.closeAsync(force)\n  }\n\n  async commit() {\n    await this.consumer.commitAsync()\n  }\n\n  pause() {\n    this.consumer.pause()\n  }\n\n  /**\n   * topics: https://github.com/SOHU-Co/kafka-node#removetopicstopics-cb-1\n   */\n  async removeTopics(topics) {\n    return await this.consumer.removeTopicsAsync(topics)\n  }\n\n  resume() {\n    this.consumer.resume()\n  }\n\n  /**\n   * offset: https://github.com/SOHU-Co/kafka-node#offset\n   */\n  setOffset(topic, partition, offset) {\n    this.consumer.setOffset(topic, partition, offset)\n  }\n\n  waitMessage() {\n    return new Promise((resolve, reject) => {\n      this.consumer.on('message', resolve)\n      this.consumer.on('error', reject)\n      this.consumer.on('offsetOutOfRange', reject)\n    })\n  }\n}\n"
  ]
}