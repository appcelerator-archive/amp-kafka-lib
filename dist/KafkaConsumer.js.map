{"version":3,"sources":["KafkaConsumer.js"],"names":[],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;;;;;;;IAEqB,a;;;AAEnB,yBAAY,QAAZ,EAAsB,OAAtB,EAA+B;AAAA;;AAAA,iGACvB,OADuB;;AAG7B,UAAK,QAAL,GAAgB,iCACd,MAAK,MADS,EAEd,QAFc,EAGd;AACE,kBAAY;AADd,KAHc,CAAhB;;;;AAUA,UAAK,cAAL,GAAsB,UAAC,MAAD,EAAS,UAAT,EAAwB;AAC5C,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,cAAK,QAAL,CAAc,SAAd,CAAwB,MAAxB,EAAgC,UAAC,GAAD,EAAM,KAAN,EAAgB;AAC9C,cAAI,GAAJ,EAAS,OAAO,OAAO,GAAP,CAAP;AACT,iBAAO,QAAQ,KAAR,CAAP;AACD,SAHD,EAGG,UAHH;AAID,OALM,CAAP;AAMD,KAPD;AAQA,UAAK,QAAL,CAAc,iBAAd,GAAkC,yBAAU,MAAK,QAAL,CAAc,YAAxB,CAAlC;AACA,UAAK,QAAL,CAAc,WAAd,GAA4B,yBAAU,MAAK,QAAL,CAAc,MAAxB,CAA5B;AACA,UAAK,QAAL,CAAc,UAAd,GAA2B,yBAAU,MAAK,QAAL,CAAc,KAAxB,CAA3B;;;AAGA,QAAI,SAAS,CAAC,SAAD,EAAY,OAAZ,EAAqB,kBAArB,CAAb;AACA,WAAO,OAAP,CAAe,iBAAS;AACtB,YAAK,QAAL,CAAc,EAAd,CAAiB,KAAjB,EAAwB,YAAa;AAAA,0CAAT,IAAS;AAAT,cAAS;AAAA;;AACnC,cAAK,IAAL,eAAU,KAAV,SAAoB,IAApB;AACD,OAFD;AAGD,KAJD;AA3B6B;AAgC9B;;;;8BAEe,M;;;;;;8CACD,KAAK,iBAAL,CAAuB,MAAvB,EAA+B,IAA/B,C;;;;;;;;;;;;;;0BAGH,K;;;;;;8CACJ,KAAK,QAAL,CAAc,UAAd,CAAyB,KAAzB,C;;;;;;;;;;;;;;;;;8CAIA,KAAK,QAAL,CAAc,WAAd,E;;;;;;;;;;;4BAGA;AACN,WAAK,QAAL,CAAc,KAAd;AACD;;;;;;;;iCAKkB,M;;;;;;8CACJ,KAAK,QAAL,CAAc,iBAAd,CAAgC,MAAhC,C;;;;;;;;;;;;;;6BAGN;AACP,WAAK,QAAL,CAAc,MAAd;AACD;;;;;;;;8BAKS,K,EAAO,S,EAAW,M,EAAQ;AAClC,WAAK,QAAL,CAAc,SAAd,CAAwB,KAAxB,EAA+B,SAA/B,EAA0C,MAA1C;AACD;;;kCAEa;AAAA;;AACZ,aAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,eAAK,QAAL,CAAc,EAAd,CAAiB,SAAjB,EAA4B,OAA5B;AACA,eAAK,QAAL,CAAc,EAAd,CAAiB,OAAjB,EAA0B,MAA1B;AACA,eAAK,QAAL,CAAc,EAAd,CAAiB,kBAAjB,EAAqC,MAArC;AACD,OAJM,CAAP;AAKD;;;;;;kBA5EkB,a","file":"KafkaConsumer.js","sourcesContent":["import { HighLevelConsumer } from 'kafka-node'\nimport Kafka from './Kafka'\nimport { promisify } from 'bluebird'\n\nexport default class KafkaConsumer extends Kafka {\n\n  constructor(payloads, options) {\n    super(options)\n\n    this.consumer = new HighLevelConsumer(\n      this.client,\n      payloads,\n      {\n        autoCommit: true\n      }\n    )\n\n    // promisify consumer functions\n    // manually promisify addTopics because callback is in the middle of the params list\n    this.addTopicsAsync = (topics, fromOffset) => {\n      return new Promise((resolve, reject) => {\n        this.consumer.addTopics(topics, (err, added) => {\n          if (err) return reject(err)\n          return resolve(added)\n        }, fromOffset)\n      })\n    }\n    this.consumer.removeTopicsAsync = promisify(this.consumer.removeTopics)\n    this.consumer.commitAsync = promisify(this.consumer.commit)\n    this.consumer.closeAsync = promisify(this.consumer.close)\n\n    // delegate consumer events\n    let events = ['message', 'error', 'offsetOutOfRange']\n    events.forEach(event => {\n      this.consumer.on(event, (...args) => {\n        this.emit(event, ...args)\n      })\n    })\n  }\n\n  async addTopics(topics) {\n    return await this.createTopicsAsync(topics, true)\n  }\n\n  async close(force) {\n    await this.consumer.closeAsync(force)\n  }\n\n  async commit() {\n    await this.consumer.commitAsync()\n  }\n\n  pause() {\n    this.consumer.pause()\n  }\n\n  /**\n   * topics: https://github.com/SOHU-Co/kafka-node#removetopicstopics-cb-1\n   */\n  async removeTopics(topics) {\n    return await this.consumer.removeTopicsAsync(topics)\n  }\n\n  resume() {\n    this.consumer.resume()\n  }\n\n  /**\n   * offset: https://github.com/SOHU-Co/kafka-node#offset\n   */\n  setOffset(topic, partition, offset) {\n    this.consumer.setOffset(topic, partition, offset)\n  }\n\n  waitMessage() {\n    return new Promise((resolve, reject) => {\n      this.consumer.on('message', resolve)\n      this.consumer.on('error', reject)\n      this.consumer.on('offsetOutOfRange', reject)\n    })\n  }\n}\n"]}